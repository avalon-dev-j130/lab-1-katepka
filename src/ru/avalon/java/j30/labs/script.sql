/*
 * TODO(Студент): Опишите процесс создания базы данных
 * 1. Создайте все таблицы, согласно предложенной диаграмме.
 * 2. Опишите все необходимые отношения между таблицами.
 * 3. Добавьте в каждую таблицу минимум три записи.
 */

CREATE TABLE SUPPLIER (
    ID INT NOT NULL UNIQUE GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    "NAME" VARCHAR(255) PRIMARY KEY,
    ADDRESS VARCHAR(255) NOT NULL,
    PHONE VARCHAR(255),
    REPRESENTATIVE VARCHAR(255) NOT NULL
);

CREATE TABLE PRODUCT (
    ID INT NOT NULL UNIQUE GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    CODE VARCHAR(255) PRIMARY KEY,
    TITLE VARCHAR(255),
    SUPPLIER INT,
    INITIAL_PRICE DOUBLE,
    RETAIL_VALUE DOUBLE,
    CONSTRAINT FK_PRODUCT_TO_SUPPLIER FOREIGN KEY (SUPPLIER) REFERENCES SUPPLIER(ID)
);

CREATE TABLE ROLES (
    ID INT NOT NULL UNIQUE GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    "NAME" VARCHAR(255) NOT NULL PRIMARY KEY
);

CREATE TABLE USER_INFO(
    ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    "NAME" VARCHAR(255),
    LASTNAME VARCHAR(255)
);

CREATE TABLE "USER" (
    ID INT NOT NULL UNIQUE GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    EMAIL VARCHAR(255) PRIMARY KEY,
    PASSWORD VARCHAR(255),
    INFO INT UNIQUE,
    "ROLE" INT,
    CONSTRAINT FK_USER_TO_INFO FOREIGN KEY (INFO) REFERENCES USER_INFO(ID),
    CONSTRAINT FK_USER_TO_ROLES FOREIGN KEY ("ROLE") REFERENCES ROLES(ID)
);

CREATE TABLE "ORDER" (
    ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    "USER" INT NOT NULL,
    CREATED TIMESTAMP,
    CONSTRAINT FK_ORDER_TO_USER FOREIGN KEY ("USER") REFERENCES "USER"(ID)
);

CREATE TABLE ORDER2PRODUCT (
    "ORDER" INT,
    PRODUCT INT,
    CONSTRAINT PK_ORDER2PRODUCT PRIMARY KEY ("ORDER", PRODUCT),
    CONSTRAINT FK_ORDER FOREIGN KEY ("ORDER") REFERENCES "ORDER"(ID),
    CONSTRAINT FK_PRODUCT FOREIGN KEY (PRODUCT) REFERENCES PRODUCT(ID)
);
